# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    SandboxCQRS\:
        resource: '../src/*'
    SandboxCQRS\Application\WebScraper\Scraper: '@SandboxCQRS\Infrastructure\Service\GooseScraper'
    SandboxCQRS\Domain\Model\BookmarkRepository: '@SandboxCQRS\Infrastructure\Persistence\Doctrine\DbalBookmarkRepository'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller'
#        tags: ['controller.service_arguments']

    Goose\Client: ~

    app.command_bus_service_locator:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']
        arguments:
            -
                SandboxCQRS\Application\Command\CreateBookmark: '@SandboxCQRS\Application\Command\CreateBookmarkHandler'
    MessageBus\CommandBus\CommandBus:
        arguments: ["@app.command_bus_service_locator"]

    app.query_bus_service_locator:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']
        arguments:
            -
                SandboxCQRS\Application\Query\ListBookmarks: '@SandboxCQRS\Application\Query\ListBookmarksHandler'
    MessageBus\QueryBus\QueryBus:
        arguments: ["@app.query_bus_service_locator"]
